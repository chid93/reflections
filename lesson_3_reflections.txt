When would you want to use a remote repository rather than keeping all your
work local?

    When you wish to have portability. Or when you need access to them and use
    them from multiple systems. This keeps you a git clone away from accessing
    your work.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    For one, I'm not the only on accessing the remote repo. So there might be
    someone else who has permissions to change the same file I'm working on. So,
    if they change it without my knowledge and it gets synced to my system, I'd
    want to throw my computer out of the window for having merged unnecessary
    content to my local files!

Describe the differences between forks, clones, and branches. When would you use
one instead of another?

    Forks clone within GitHub. Clones downloads the repo to your desktop.
    Branches clones the commit into two.
    Fork is used when we want to modify someone else's repo. Clone is used when
    we want use our files on different systems or we want our collaborators to
    use them. Branches is used for testing out new features or experimenting our
    code.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Syncing becomes easier. Git becomes more efficient by fast forwarding merges
    instead of calculating the number of additions and deletions of lines.
    Conflicts can be resolved while pertaining the logical meaning behind the
    code or the content.
    By my understanding, only the commits after the last known state have to be
    pushed while pushing from local to remote repository.

Also, remember, For Syncing the remote with the local repository.. We'd have
to first Pull(Fetch + Merge) from the repository and then Push to the
repository.
